# {{ .chezmoi.version.builtBy }}

# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="kevinschaul"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment one of the following lines to change the auto-update behavior
# zstyle ':omz:update' mode disabled  # disable automatic updates
# zstyle ':omz:update' mode auto      # update automatically without asking
# zstyle ':omz:update' mode reminder  # just remind me to update when it's time

# Uncomment the following line to change how often to auto-update (in days).
# zstyle ':omz:update' frequency 13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# You can also set it to another string to have that shown instead of the default red dots.
# e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
# Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.

plugins=(
    git
    git-open # git clone https://github.com/paulirish/git-open.git $ZSH_CUSTOM/plugins/git-open
)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export PATH=$HOME/.local/bin:$PATH

# NVM
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

export NEXT_TELEMETRY_DISABLED=1
export STORYBOOK_DISABLE_TELEMETRY=1

{{ if eq .chezmoi.os "darwin" }}
    # OS X only
    alias o="open ."
    alias r=R
    alias create-custom-template='npx @washingtonpost/create-custom-template@latest'

    eval "$(/opt/homebrew/bin/brew shellenv)"

    # Add Visual Studio Code (code)
    export PATH="$PATH:/Applications/Visual Studio Code.app/Contents/Resources/app/bin"

    # Fixes for Zscaler certificates
    # https://help.zscaler.com/zia/adding-custom-certificate-application-specific-trust-store
    export CERT_PATH=/etc/ssl/certs/combo-certifi-ZscalerRootCA.pem
    export CERT_DIR=/etc/ssl/certs/
    export SSL_CERT_FILE=${CERT_PATH}
    export SSL_CERT_DIR=${CERT_DIR}
    export REQUESTS_CA_BUNDLE=${CERT_PATH}
    export NODE_EXTRA_CA_CERTS=${CERT_PATH}
{{ end }}

{{ if eq .chezmoi.os "linux" }}
    # Linux only
    # kdesrc-build #################################################################

    ## Add kdesrc-build to PATH
    export PATH="$HOME/kde/src/kdesrc-build:$PATH"


    ## Autocomplete for kdesrc-run
    function _comp_kdesrc_run
    {
      local cur
      COMPREPLY=()
      cur="${COMP_WORDS[COMP_CWORD]}"

      # Complete only the first argument
      if [[ $COMP_CWORD != 1 ]]; then
        return 0
      fi

      # Retrieve build modules through kdesrc-run
      # If the exit status indicates failure, set the wordlist empty to avoid
      # unrelated messages.
      local modules
      if ! modules=$(kdesrc-run --list-installed);
      then
          modules=""
      fi

      # Return completions that match the current word
      COMPREPLY=( $(compgen -W "${modules}" -- "$cur") )

      return 0
    }

    ## Register autocomplete function
    complete -o nospace -F _comp_kdesrc_run kdesrc-run


    # Fly.io
    export FLYCTL_INSTALL="/home/kevin/.fly"
    export PATH="$FLYCTL_INSTALL/bin:$PATH"

    ################################################################################
{{ end }}

# pyenv
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"

# pyenv-virtualenv
eval "$(pyenv virtualenv-init -)"

# Set up fzf (file searcher, used in vim)
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# Enable a helpful filename managment program
autoload zmv
